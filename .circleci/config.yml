version: 2
# Tell CircleCI to use this workflow
workflows:
  version: 2
  build_and_deploy:
    jobs:
      - "python-3.6"
      - "python-3.7"
      - "python-3.8"
      - deploy:
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/
  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - "python-3.6"
      - "python-3.7"
      - "python-3.8"
  default:
    jobs:
      - "python-3.6"
      - "python-3.7"
      - "python-3.8"

shared: &shared
  steps:
    - checkout
    - restore_cache:
        key: deps-{{ checksum "./ci/environment.yml" }}
    - run:
        name: Install dependencies in (base environment)
        command: |
          conda env update -n base -f ${ENV_FILE}
          python -m pip install .
    - run:
        name: List packages in the current environment (base)
        command: |
          conda list
    - run:
        name: Running Tests
        command: |
          pytest -n 4 --junitxml=test-reports/junit.xml --cov=./ --verbose
        no_output_timeout: 30m
    - run:
        name: Uploading code coverage report
        command: |
          codecov
    - store_test_results:
        path: test-reports

    - store_artifacts:
        path: test-reports

    - save_cache:
        key: deps-{{ checksum "./ci/environment.yml" }}
        paths:
          - "/opt/conda/pkgs"


jobs:

  "python-3.6":
    <<: *shared
    docker:
      - image: ncarxdev/miniconda:3.6
    environment:
      ENV_FILE: "./ci/environment.yml"

  "python-3.7":
    <<: *shared
    docker:
      - image: ncarxdev/miniconda:3.7
    environment:
      ENV_FILE: "./ci/environment.yml"

  "python-3.8":
    <<: *shared
    docker:
      - image: ncarxdev/miniconda:3.8
    environment:
      ENV_FILE: "./ci/environment.yml"

  deploy:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - restore_cache:
          key: v1-dependency-cache-{{ checksum "setup.py" }}-{{ checksum "Makefile" }}
      - run:
          name: install python dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make dev
      - save_cache:
          key: v1-dependency-cache-{{ checksum "setup.py" }}-{{ checksum "Makefile" }}
          paths:
            - "venv"
      - run:
          name: verify git tag vs. version
          command: |
            python3 -m venv venv
            . venv/bin/activate
            python setup.py verify
      - run:
          name: init .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = "apinard" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc
      - run:
          name: create packages
          command: |
            make package
      - run:
          name: upload to pypi
          command: |
            . venv/bin/activate
            twine upload dist/*
